==== Package bar ====
Shape for bar
provides:
requires: A -> THIS:A
               A{bar}
[1 of 1] Compiling A[abstract sig]  ( bar/A.hsig, nothing )
==== Package foo ====
Shape for foo
provides:
requires: A -> THIS:A
               A{foo}
[1 of 1] Compiling A[abstract sig]  ( foo/A.hsig, nothing )
==== Package impl ====
Shape for impl
provides: A -> THIS:A
               THIS:A1.A{THIS:A1.foo}, THIS:A2.A{THIS:A2.bar}
          A1 -> THIS:A1
                A{A, A, bar, foo}
          A2 -> THIS:A2
                A{A, A, bar, foo}
requires:
[1 of 3] Compiling A1               ( impl/A1.hs, nothing )
[2 of 3] Compiling A2               ( impl/A2.hs, nothing )
[3 of 3] Compiling A                ( impl/A.hs, nothing )
==== Package barimpl ====
Shape for barimpl
provides: A -> impl():A
               impl():A1.A{impl():A1.foo}, impl():A2.A{impl():A2.bar}
          A1 -> impl():A1
                A{A, A, bar, foo}
          A2 -> impl():A2
                A{A, A, bar, foo}
requires:
[1 of 2] Including impl
[2 of 2] Including bar
==== Package fooimpl ====
Shape for fooimpl
provides: A -> impl():A
               impl():A1.A{impl():A1.foo}, impl():A2.A{impl():A2.bar}
          A1 -> impl():A1
                A{A, A, bar, foo}
          A2 -> impl():A2
                A{A, A, bar, foo}
requires:
[1 of 2] Including impl
[2 of 2] Including foo
==== Package foobarimpl ====
Shape for foobarimpl
provides: A -> impl():A
               impl():A1.A{impl():A1.foo}, impl():A2.A{impl():A2.bar}
          A1 -> impl():A1
                A{A, A, bar, foo}
          A2 -> impl():A2
                A{A, A, bar, foo}
requires:
[1 of 3] Including impl
[2 of 3] Including foo
[3 of 3] Including bar
