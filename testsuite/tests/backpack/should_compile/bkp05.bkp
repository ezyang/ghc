unit bar where
    signature A(bar) where
        data A = A { foo :: Int, bar :: Bool }

unit foo where
    signature A(foo) where
        data A = A { foo :: Int, bar :: Bool }

unit impl where
    module A1 where
        data A = A { foo :: Int, bar :: Bool }
    module A2 where
        data A = A { foo :: Int, bar :: Bool }
    module A(foo, bar) where
        import A1(foo)
        import A2(bar)

unit barimpl where
    include impl
    include bar

unit fooimpl where
    include impl
    include foo

unit foobarimpl where
    include impl
    include foo
    include bar
